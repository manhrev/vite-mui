// @generated by protoc-gen-es v1.4.1 with parameter "target=js+dts"
// @generated from file auth/v1/auth.proto (package auth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message auth.v1.UserInfo
 */
export declare class UserInfo extends Message<UserInfo> {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  constructor(data?: PartialMessage<UserInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.UserInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserInfo;

  static equals(a: UserInfo | PlainMessage<UserInfo> | undefined, b: UserInfo | PlainMessage<UserInfo> | undefined): boolean;
}

/**
 * @generated from message auth.v1.SignUpRequest
 */
export declare class SignUpRequest extends Message<SignUpRequest> {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  constructor(data?: PartialMessage<SignUpRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.SignUpRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpRequest;

  static equals(a: SignUpRequest | PlainMessage<SignUpRequest> | undefined, b: SignUpRequest | PlainMessage<SignUpRequest> | undefined): boolean;
}

/**
 * @generated from message auth.v1.SignUpResponse
 */
export declare class SignUpResponse extends Message<SignUpResponse> {
  /**
   * @generated from field: auth.v1.UserInfo info = 1;
   */
  info?: UserInfo;

  constructor(data?: PartialMessage<SignUpResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.SignUpResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpResponse;

  static equals(a: SignUpResponse | PlainMessage<SignUpResponse> | undefined, b: SignUpResponse | PlainMessage<SignUpResponse> | undefined): boolean;
}

/**
 * @generated from message auth.v1.LoginRequest
 */
export declare class LoginRequest extends Message<LoginRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<LoginRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.LoginRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginRequest;

  static equals(a: LoginRequest | PlainMessage<LoginRequest> | undefined, b: LoginRequest | PlainMessage<LoginRequest> | undefined): boolean;
}

/**
 * @generated from message auth.v1.LoginResponse
 */
export declare class LoginResponse extends Message<LoginResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<LoginResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.LoginResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResponse;

  static equals(a: LoginResponse | PlainMessage<LoginResponse> | undefined, b: LoginResponse | PlainMessage<LoginResponse> | undefined): boolean;
}

/**
 * @generated from message auth.v1.MeRequest
 */
export declare class MeRequest extends Message<MeRequest> {
  constructor(data?: PartialMessage<MeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.MeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeRequest;

  static equals(a: MeRequest | PlainMessage<MeRequest> | undefined, b: MeRequest | PlainMessage<MeRequest> | undefined): boolean;
}

/**
 * @generated from message auth.v1.MeResponse
 */
export declare class MeResponse extends Message<MeResponse> {
  /**
   * @generated from field: auth.v1.UserInfo info = 1;
   */
  info?: UserInfo;

  constructor(data?: PartialMessage<MeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "auth.v1.MeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeResponse;

  static equals(a: MeResponse | PlainMessage<MeResponse> | undefined, b: MeResponse | PlainMessage<MeResponse> | undefined): boolean;
}

